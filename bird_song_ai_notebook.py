# -*- coding: utf-8 -*-
"""Bird Song AI Notebook.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-dIw9gzpbeU8s-zrKzJFAVahLd2phNoT
"""

# Import necessary libraries
import librosa
import librosa.display
import matplotlib.pyplot as plt
import numpy as np
import requests

# Function to download and save the audio file
def download_audio(url, file_name):
    response = requests.get(url)
    with open(file_name, 'wb') as file:
        file.write(response.content)

# Function to plot the spectrogram
def plot_spectrogram(y, sr, title):
    # Compute the short-time Fourier transform (STFT) of the audio
    D = np.abs(librosa.stft(y))

    # Convert the STFT into a log-scaled spectrogram
    S_db = librosa.amplitude_to_db(D, ref=np.max)

    # Plot the spectrogram
    plt.figure(figsize=(10, 6))
    librosa.display.specshow(S_db, sr=sr, x_axis='time', y_axis='log')
    plt.colorbar(format='%+2.0f dB')
    plt.title(title)
    plt.show()

# Function to load and plot the audio waveform and spectrogram
def load_and_plot_audio(file_path):
    # Load the audio file
    y, sr = librosa.load(file_path)

    # Plot the waveform
    plt.figure(figsize=(10, 3))
    librosa.display.waveshow(y, sr=sr)
    plt.title('Waveform')
    plt.xlabel('Time (s)')
    plt.ylabel('Amplitude')
    plt.show()

    # Plot the spectrogram
    plot_spectrogram(y, sr, 'Spectrogram')

# Download the audio file from the provided URL
audio_url = 'https://soundcamp.org/sounds/382/birdsong_in_woodland_DGc.wav'
audio_file = 'birdsong_in_woodland.wav'
download_audio(audio_url, audio_file)

# Load and plot the audio
load_and_plot_audio(audio_file)

